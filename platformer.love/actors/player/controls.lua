
function playerControls(playerObj,player, dt)
  local facingRight = 1
  local facingLeft = -1
  local isJumping = false
  local speed = 80

    local dx, dy = 0, 0
    if love.keyboard.isDown('right') then
      dx = speed * dt
    playerObj.direction = facingRight
    elseif love.keyboard.isDown('left') then
    playerObj.direction = facingRight
    dx = -speed * dt

    end
    if love.keyboard.isDown('down') then
      dy = speed * dt
    elseif love.keyboard.isDown('up') then
      dy = -speed * dt
    end

    if dx ~= 0 or dy ~= 0 then
      local cols
      player.x, player.y, cols, cols_len = world:move(player, player.x + dx, player.y + dy)
      for i=1, cols_len do
        local col = cols[i]
        print("other:", col.other)
        print("type", dump(col.type))
        print("norm", dump(col.normal))
      end
    end
end

-- if love.keyboard.isDown("right") then --press the right arrow key to push the ball to the right
--   objects.ball.body:applyForce(400, 0)
-- elseif love.keyboard.isDown("left") then --press the left arrow key to push the ball to the left
--   objects.ball.body:applyForce(-400, 0)
-- elseif love.keyboard.isDown("up") then --press the up arrow key to set the ball in the air
--   objects.ball.body:setPosition(650/2, 650/2)
--   objects.ball.body:setLinearVelocity(0, 0) --we must set the velocity to zero to prevent a potentially large velocity generated by the change in position
-- end
